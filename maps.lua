
function load_map(m)
	MAP = m

	for y = 1, #MAP, 1 do
		for x = 1, #MAP[y] do
			if MAP[y][x] == 1 then
				table.insert(SHADOWS, newShadow({x=(x-1)*16+8,y=(y-1)*16+8}))
				table.insert(SOLIDS, newGround({x=(x-1)*16,y=(y-1)*16}))
			elseif MAP[y][x] == 2 then
				table.insert(ENTITIES, newEye({x=(x-1)*16,y=(y-1)*16}))
			elseif MAP[y][x] == 3 then
				table.insert(ENTITIES, newSpikes({x=(x-1)*16,y=(y-1)*16,direction="up"}))
			elseif MAP[y][x] == 4 then
				table.insert(ENTITIES, newSpikes({x=(x-1)*16,y=(y-1)*16,direction="down"}))
			elseif MAP[y][x] == 5 then
				table.insert(ENTITIES, newSpikes({x=(x-1)*16,y=(y-1)*16,direction="right"}))
			elseif MAP[y][x] == 6 then
				table.insert(ENTITIES, newSpikes({x=(x-1)*16,y=(y-1)*16,direction="left"}))
			elseif MAP[y][x] == 7 then
				table.insert(ENTITIES, newBouncer({x=(x-1)*16,y=(y-1)*16}))
			elseif MAP[y][x] == 8 then
				table.insert(SHADOWS, newShadow({x=(x-1)*16,y=(y-1)*16}))
				table.insert(SOLIDS, newBridge({x=(x-1)*16,y=(y-1)*16}))
			elseif MAP[y][x] == 9 then
				table.insert(ENTITIES, newGem({x=(x-1)*16,y=(y-1)*16}))
			end
		end
	end

	table.insert(EFFECTS, newCounter({}))
end

MAP_3p = {
	{1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,6,1,1,1,1,1,1,1,5,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,7,2,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,},
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,},
	{1,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,},
	{1,0,2,0,0,0,0,0,3,3,3,3,3,1,1,1,1,1,1,1,},
	{1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,},
}

MAP_spikes = {
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,},
	{1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,},
	{1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,0,0,0,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,1,},
	{0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,},
	{0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,},
	{1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,},
	{1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,},
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,},
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,},
}

MAP_plain = {
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,},
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,},
}

MAP_bridge = {
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,},
	{1,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,},
	{1,8,8,8,8,8,8,8,1,1,1,1,8,8,8,8,8,8,8,1,},
	{0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,},
	{0,0,0,9,9,0,0,0,1,1,1,1,0,0,0,9,9,0,0,0,},
	{0,0,0,9,9,0,0,0,1,1,1,1,0,0,0,9,9,0,0,0,},
	{1,0,0,7,0,0,0,0,1,1,1,1,0,0,0,0,2,0,0,1,},
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,},
}

MAP_classic = {
	{1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,9,9,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,1,},
	{1,8,8,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,},
	{1,0,0,0,0,8,8,8,1,1,1,1,0,0,9,9,0,0,0,1,},
	{1,0,0,0,0,0,0,0,1,1,1,1,8,8,8,8,0,0,0,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,2,0,0,9,9,9,0,0,0,0,0,9,9,9,0,0,0,2,1,},
	{1,8,8,8,8,8,8,0,0,0,0,0,8,8,8,8,8,8,8,1,},
	{1,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,1,},
	{1,2,9,9,0,0,0,0,0,9,9,9,0,0,0,0,0,0,2,1,},
	{1,8,8,8,8,0,0,0,8,8,8,8,8,0,0,0,0,8,8,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,},
}

MAP_classic2 = {
	{1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,9,9,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,1,},
	{1,8,8,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,},
	{1,0,0,0,0,8,8,8,1,9,9,1,0,0,9,9,0,0,0,1,},
	{0,0,0,0,0,0,0,0,1,9,9,1,8,8,8,8,0,0,0,0,},
	{0,0,0,0,0,0,0,0,1,9,9,1,0,0,0,0,0,0,0,0,},
	{0,2,0,0,9,9,9,0,1,9,9,1,9,9,9,0,0,0,2,0,},
	{1,8,8,8,8,8,8,0,1,8,8,1,8,8,8,8,8,8,8,1,},
	{1,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,1,},
	{1,2,9,9,0,0,0,0,9,9,9,9,0,0,0,0,0,0,2,1,},
	{1,8,8,8,8,0,0,0,8,8,8,8,8,0,0,0,0,8,8,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,},
	{1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,},
}
